# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

name: aws-iot-greengrass-v2
base: core20
version: '2.4.0'
summary: AWS supported software that extends cloud capabilities to local devices.
description: |
  AWS supported software that extends cloud capabilities to local devices.
grade: devel # must be 'stable' to release into candidate/stable channels
confinement: strict

# declare home plug to allow access to files owned by the user in the userâ€™s home ($HOME) directory
plugs:
  home-for-greengrass:
    interface: home
    read: all
  docker-cli:
    interface: docker
  docker-executables:
    content: docker-executables
    default-provider: docker
    interface: content
    target: $SNAP/docker-env
  root-dot-docker:
    interface: personal-files
    write:
    - $HOME/.docker
  greengrass-config:
    interface: content
    target: $SNAP_DATA/greengrass/v2

parts:
  greengrass:
    # See 'snapcraft plugins'
    plugin: dump
    source: https://d2s8p88vqu9w66.cloudfront.net/releases/greengrass-2.4.0.zip
    stage-packages:
      - openjdk-8-jre-headless
    build-packages:
      # We need to replace dangling symlink for java ssl certs.
      - ca-certificates-java
    override-build: |
      # execute default build step
      snapcraftctl build

      cd "$SNAPCRAFT_PART_INSTALL/usr/lib/jvm" || exit 2

      # The java-8-openjdk-<arch> dir has a different name for each arch, so
      # we need a symlink that references the actual name.
      # Described in: https://forum.snapcraft.io/t/advanced-grammar-for-layouts-or-workaround/17177/4

      # This will be a symlink to the arch-specific openjdk directory.
      OPENJDK_DIR_SYMLINK="java-8-openjdk-arch-symlink"

      case $(arch) in
              x86_64)
              OPENJDK_DIR="java-8-openjdk-amd64"
              ;;
      esac

      ln -s "$OPENJDK_DIR" "$OPENJDK_DIR_SYMLINK" || \
      (echo "failed to link $OPENJDK_DIR_SYMLINK -> $OPENJDK_DIR" \
      && exit 4)

      # The cacerts under /etc won't be accessible after build-time,
      # so the symlink leading to them will become a dangling symlinnk.
      # To avoid this, we'll copy them to the java subdirectory.
      cp /etc/ssl/certs/java/cacerts \
              "$SNAPCRAFT_PART_INSTALL/usr/lib/jvm/$OPENJDK_DIR_SYMLINK/jre/lib/security/cacerts" \
              || exit 5
      cp /etc/ssl/certs/java/cacerts \
              "$SNAPCRAFT_PART_INSTALL/etc/ssl/certs/java/cacerts" \
              || exit 6
  wrapper-scripts:
    plugin: dump
    source: local-scripts/

layout:
  # symlink java
  /usr/bin/java:
    symlink: $SNAP/usr/lib/jvm/java-8-openjdk-arch-symlink/jre/bin/java

apps:
  greengrass:
    command: exec-loader.sh
    daemon: simple
    install-mode: disable
    plugs:
      - mount-observe
      - network-bind
      - process-control
      - hardware-observe
      - log-observe
      - home-for-greengrass
      - docker-cli
      - docker-executables
      - root-dot-docker
